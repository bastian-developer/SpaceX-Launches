---
interface Props {
  id: string;
  img: string;
  success: boolean;
  flightnumber: number;
  details: string | null;
  date: Date;
}

const { success, flightnumber, img, id, details, date } = Astro.props;
const launchStatus = success ? "Success" : "Fail";

let formattedDate = date.toString().split('T')[0]
---

<a
  href={`/launch/${id}`}
  class="rounded-lg border shadow-md bg-gray-800 border-gray-700 hover:scale-105 hover:bg-gray-700 hover:border-gray-500 transition flex flex-col"
>
  <picture class="flex justify-center p-4">
    <img class="mb-5 rounded-lg" src={img} alt={`Patch for launch ${id}`} />
  </picture>

  <header class="p-4 flex-grow">
    <span
      class:list={[
        "text-xs font-semibold mr-2 px-2.5 py-0.5 rounded",
        {
            "bg-green-200 text-green-900" : success,
            "bg-red-300 text-red-900" : !success
        }
      
      ]}}
      >{launchStatus}
    </span>

    <p class="mb-4 font-light text-gray-400 text-right">
      {formattedDate}
    </p>

    <h2 class="my-2 text-2xl font-bold tracking-tight text-white">
      Flight #{flightnumber}
    </h2>

    <p class="mb-4 font-light text-gray-400">
      {details != null && details?.length > 100 ? details.slice(0, 100) + " ... " : details}
    </p>
  </header>
</a>
